// var factorial = fn (n) {
//     if n < 0 {
//         return nil;
//     }
//     if n == 0 {
//         return 1;
//     }
//     return n * factorial(n - 1);
// };

// print(factorial(3));

// var fibonacci = fn (n) {
//     if n < 0 {
//         return nil;
//     }
//     if n == 0 {
//         return 0;
//     }
//     if n == 1 {
//         return 1;
//     }
//     return fibonacci(n - 1) + fibonacci(n - 2);
// };

// print(fibonacci(3));

// var List = fn () {
//     return { head: nil };
// };

// var append = fn (list, val) {
//     if list.head == nil {
//         list.head = { val, next: nil };
//         return;
//     }
//     _append(list.head, val);
// };

// var _append = fn (node, val) {
//     if node.next == nil {
//         node.next = { val, next: nil };
//         return;
//     }
//     _append(node.next, val);
// };

// var prepend = fn (list, val) {
//     var new_head = { val, next: list.head };
//     list.head = new_head;
// };

// var remove = fn (list, val) {
//     if list.head == nil {
//         return;
//     }
//     if list.head.val == val {
//         list.head = nil;
//         return;
//     }
//     if list.head.next == nil {
//         return;
//     }
//     _remove(list.head, list.head.next, val);
// };

// var _remove = fn (prev, curr, val) {
//     if curr.val == val {
//         prev.next = curr.next;
//         return;
//     }
//     if curr.next == nil {
//         return;
//     }
//     _remove(prev = curr, curr = curr.next, val);
// };

// var sum = fn (list) {
//     return _sum(list.head, 0);
// };

// var _sum = fn (node, total) {
//     if node == nil {
//         return total;
//     }
//     return _sum(node.next, total + node.val);
// };

// var avg = fn (list) {
//     if list.head == nil {
//         return nil;
//     }
//     return _avg(list.head.next, list.head.val, 1);
// };

// var _avg = fn (node, total, count) {
//     if node == nil {
//         return total / count;
//     }
//     return _avg(node.next, total + node.val, count + 1);
// };

// var max = fn (list) {
//     if list.head == nil {
//         return nil;
//     }
//     return _max(list.head.next, list.head.val);
// };

// var _max = fn (node, curr_max) {
//     if node == nil {
//         return curr_max;
//     }
//     if node.val > curr_max {
//         return _max(node.next, node.val);
//     }
//     return _max(node.next, curr_max);
// };

// var list = List();

// append(list, 1);
// append(list, 2);
// append(list, 3);
// print(list);

// prepend(list, 0);
// print(list);

// remove(list, 2);
// print(list);

// print(sum(list));
// print(avg(list));
// print(max(list));

// var make_func = fn () {
//     var x = 420;
//     return fn (y) {
//         return x + y;
//     };
// };

// var func = make_func();
// print(func(69));
// print(x);

print("hello\tworld");
